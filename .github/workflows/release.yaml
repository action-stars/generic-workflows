name: Publish Release

on:
  workflow_call:
    inputs:
      changelog_path:
        description: Path to the CHANGELOG file; this needs to follow the Keep a Changelog pattern.
        type: string
        required: false
        default: ./CHANGELOG.md
      version:
        description: The version to be released.
        type: string
        required: false
        default: ${{ github.ref_name }}
      make_latest:
        description: Whether to make the release the latest release.
        type: boolean
        required: false
        default: true
      artifacts:
        description: Comma separated list of artifact path to be uploaded to the release; this supports globs.
        type: string
        required: false
        default: ""

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1

      - name: Get changelog entry
        id: changelog
        uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2.2.3
        with:
          path: ${{ inputs.changelog_path }}
          version: ${{ inputs.version }}

      - name: Release notes
        id: release_notes
        run: |
          set -euo pipefail

          changes="$(
          cat <<'EOF'
          ${{ steps.changelog.outputs.changes }}
          EOF
          )"

          changelog="$(echo "${changes}" | sed -r 's/\[(@[^]]+)\]\([^)]+\)/\1/g')"

          {
            echo "changelog<<EOF"
            echo "${changelog}"
            echo "EOF"
          } >> "${GITHUB_OUTPUT}"

      - name: Create release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          token: ${{ github.token }}
          makeLatest: ${{ inputs.make_latest }}
          allowUpdates: true
          body: ${{ steps.release_notes.outputs.changelog }}
          artifacts: ${{ inputs.artifacts }}
